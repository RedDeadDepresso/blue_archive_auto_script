# This file is auto generated by develop_tools/generate_dataclass_code.py
# Do not modify it manually
from dataclasses import dataclass


@dataclass
class Config:
    name: str
    purchase_arena_ticket_times: str
    screenshot_interval: str
    autostart: bool
    then: str
    program_address: str
    open_emulator_stat: bool
    emulator_wait_time: str
    ArenaLevelDiff: int
    ArenaComponentNumber: int
    maxArenaRefreshTimes: int
    createPriority_phase1: str
    createPriority_phase2: str
    createPriority_phase3: str
    create_phase_1_select_item_rule: str
    create_phase_2_select_item_rule: str
    create_phase_3_select_item_rule: str
    create_phase: int
    create_item_holding_quantity: dict
    use_acceleration_ticket: bool
    createTime: str
    last_refresh_config_time: str
    alreadyCreateTime: str
    totalForceFightDifficulty: str
    hardPriority: str
    unfinished_hard_tasks: list
    mainlinePriority: str
    unfinished_normal_tasks: list
    main_story_regions: str
    rewarded_task_times: str
    purchase_rewarded_task_ticket_times: str
    special_task_times: str
    purchase_scrimmage_ticket_times: str
    scrimmage_times: str
    patStyle: str
    antiHarmony: bool
    bannerVisibility: bool
    push_after_error: bool
    push_after_completion: bool
    push_json: str
    push_serverchan: str
    cafe_reward_lowest_affection_first: bool
    cafe_reward_invite1_criterion: str
    favorStudent1: list
    cafe_reward_invite1_starred_student_position: int
    cafe_reward_has_no2_cafe: bool
    cafe_reward_collect_hour_reward: bool
    cafe_reward_invite2_criterion: str
    favorStudent2: list
    cafe_reward_invite2_starred_student_position: int
    cafe_reward_use_invitation_ticket: bool
    cafe_reward_allow_duplicate_invite: bool
    cafe_reward_allow_exchange_student: bool
    cafe_reward_interaction_shot_delay: float
    server: str
    control_method: str
    screenshot_method: str
    adbIP: str
    adbPort: str
    lesson_times: list
    lesson_enableInviteFavorStudent: bool
    lesson_favorStudent: list
    lesson_relationship_first: bool
    lesson_each_region_object_priority: list
    purchase_lesson_ticket_times: str
    explore_normal_task_list: list
    explore_hard_task_list: list
    emulatorIsMultiInstance: bool
    emulatorMultiInstanceNumber: int
    multiEmulatorName: str
    manual_boss: bool
    choose_team_method: str
    side_team_attribute: list
    preset_team_attribute: list
    burst1: str
    burst2: str
    pierce1: str
    pierce2: str
    mystic1: str
    mystic2: str
    shock1: str
    shock2: str
    activity_sweep_task_number: int
    activity_sweep_times: str
    TacticalChallengeShopRefreshTime: str
    TacticalChallengeShopList: list
    CommonShopRefreshTime: str
    CommonShopList: list
    clear_friend_white_list: list
    drill_difficulty_list: list
    drill_fight_formation_list: list
    drill_enable_sweep: bool
    new_event_enable_state: str
    ap: dict
    creditpoints: dict
    pyroxene: dict
    tactical_challenge_coin: dict
    bounty_coin: dict
    assetsVisibility: bool
